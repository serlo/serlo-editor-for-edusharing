# === General settings ===

# Port on which to start the editor (defaults to 3000)
# PORT=3000

# URL under which the Serlo editor is accessable for users (This will also be
# the issuer of the editor used for LTI)
EDITOR_URL=http://localhost:3000/

# Settings for mongodb
MONGODB_URL=mongodb://localhost/admin
# If the mongodb server does not use authentication you can just comment out the next two lines
MONGODB_USERNAME=root
MONGODB_PASSWORD=example

# === Settings for using the editor as a LTI tool ===

# Client ID which was assigned to the Serlo editor by edu-sharing
EDITOR_CLIENT_ID_FOR_LAUNCH=piQ0JV8O880ZrVt

# Issuer of edu-sharing
EDUSHARING_URL=http://repository.127.0.0.1.nip.io:8100/edu-sharing
# Port of the edusharing mock server used for development (defaults to 8100)
# EDUSHARING_PORT=8100


# LTI authentication endpoints of edu-sharing (These must be the URLs under
# which edu-sharing is publically visible)
EDUSHARING_AUTHENTICATION_URL_FOR_LAUNCH=http://repository.127.0.0.1.nip.io:8100/edu-sharing/rest/ltiplatform/v13/auth
# This env is unused. The Serlo editor does not request an access token from edu-sharing. Instead, edu-sharing sends us a jwt in the LTI Deep Linking response that will be used to authorize getting a certain nodeId later. 
EDUSHARING_ACCESSTOKEN_URL=http://repository.127.0.0.1.nip.io:8100/edu-sharing/rest/ltiplatform/v13/token

# Keyset URL of edu-sharing. Note that this needs to be a URL under which
# edu-sharing is directly visible to the Serlo editor, e.g. in a local docker
# environment `EDUSHARING_KEYSET_URL` might be `http://repository-service:8080/...`
EDUSHARING_KEYSET_URL=http://repository.127.0.0.1.nip.io:8100/edu-sharing/rest/lti/v13/jwks

# Key used to sign seesion cookies and ltik token
# See https://cvmcosta.me/ltijs/#/provider?id=encryption-key
EDITOR_KEY_FOR_SIGNING_COOKIES_AND_ENCRYPTING_DATABASE_ENTRIES=LTIKEY

# === Settings for using the editor as a LTI platform ===

# Configs of the Serlo editor when used as a LTI platform
EDITOR_CLIENT_ID_FOR_EMBEDDING=editor
EDITOR_DEPLOYMENT_ID_FOR_EMBEDDING=2
EDITOR_KEY_ID_FOR_EMBEDDING=42

# Urls of edu-sharing for using as a LTI tool
# See: https://www.imsglobal.org/spec/security/v1p0/#fig_oidcflow 
EDUSHARING_AUTHENTICATION_RESPONSE_URL_FOR_EMBEDDING=http://repository.127.0.0.1.nip.io:8100/edu-sharing/rest/lti/v13/lti13
EDUSHARING_LOGIN_INITIATION_URL_FOR_EMBEDDING=http://repository.127.0.0.1.nip.io:8100/edu-sharing/rest/lti/v13/oidc/login_initiations

# URL to endpoint to get embed HTML for edu-sharing embeddings (`nodeId` will be
# added to this URL)
EDUSHARING_DETAILS_URL_FOR_EMBEDDING=http://repository.127.0.0.1.nip.io:8100/edu-sharing/rest/lti/v13/details

# Must be a RSA key with at least 2048 bits
EDITOR_PRIVATE_KEY_FOR_EMBEDDING=LS0tLS1CRUdJTiBSU0EgUFJJVkFURSBLRVktLS0tLSAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCk1JSUVwQUlCQUFLQ0FRRUE0c3o2V1NyRVgyd1AvUTFJOGRSMU5nNE92bENzaTEraXlsRHQ2K1FWR2hFS2tnNHUgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIApVekJDdVRQZktPT1BmWjQxOEgxeTJ2TnhTM1A4d3BTN09rZHRPVzV4OHA1SGNtRUxhR3hwUFZPMGFxTllWY2JWICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKTElJekt2ajlyOVFDaXhnNDR2a3ZtZkdqNW1UNkpKWVdKT0xNT0lYSUxsektUMlFocElhbXhiR3N1ZlFRMzZ1dCAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCjVweG1DOTMrQWltQWJSejloMzB4T0NJWnRVeTVTVVZLbktKS3g1L2NySkVETElPYW41Q3NWRkdicVo1OUIvRS8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIApLVDhpa3dUODA0enBpRWEyMlIvL3pWSDI3ZlgrUnVIb2JZWEJDUU1wU084UXdFREliU05QSklHT0xSQy9XZVE1ICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKVTgrdVk0VHg3Umo1bjl3cms1a0U1aVpEVzNPMXN3R0F3R00xdHdJREFRQUJBb0lCQVFETmRYZk4wMHAyVDBUayAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCnIyWkhmWHA1YjU2M2xnblpjTmZlaEJZbFBraEhodXlXaDdZN3NscWZ3SGdIYUs4UzA0SjF6SStCL2t2Q1dONi8gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIAp2MUVsYUpOd0ZiZXdYT2JJblZWaVVlTzhwTm1xU1RPNjhSY283UUpCaWJMMzJBNDl4OEd4REtDc3l4VDVvTHhpICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAKN0h3L0NoNkxqZFpjK2I1azBZY1FydExpQVNWQ2hqMEsvMm9jbXR0V2hSZGZyKzRaL3orWnQ4YVhPelpLbXB0biAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgCk5Ceng1UXlaSHJwdUxuR1hIeU9NMWVIdWVuakFKOVkwdGhDK1BUQkxkenp3ekFVcW84YzMyYW41YkZCaytYRkIgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIApWSjV6NXRWUWZXcE85di9wS2JrWDRhZlhzQVJqc3F5cmZ0bjd0eEp1Z3B5dWkxSmlqZVRmTlRTRjhFWE9kVXhvClNlT2laUlRoQW9HQkFQZmU4L3BXMytPMytoZE5vSjc1ZGRjUVBxd1htVUJnTE9lMjZrSW1BeU9zaEZJSmU5SksKb1NLNlgwUUdwdmUvVXd3Z3ptMnRnNU5kVDJ4MmpSRFZhUU5QNVBxbWt0Yi9kYVc1R0tYa1pVQWlNcnNRNyt4NwpIKzRja2xVMXE2N3FYakNadHFVYkZjOXRQYTFlcFVqeVFIREFTTUpEUk1KT0RNRDVCRGlULytRcEFvR0JBT285CklEdy8vTFNkd3JWVWdzQUFBbXNtbjBtTWlFWHhTQjQyaFozK0xBTmVKdzV1azZsRDJVeGFlTDJyYnF4U0g2eGEKZzRkazdEcjEwMVR4enhxODBGeGIyMExpa3RNYXdvUVhyc0JDMGN2MVRKWE0vR0RWdWdEVXA3WEZ5VTZKSm1qSApiSlpiblI1SHh6bE9VT29sOUJOSTFMTE5XOU9OekdVZFlOeThYb2JmQW9HQkFMd0R1czdGL05ldllwMHdmY2g0CmNxRXFLay9CS3JiQS9PN2FPVURwc25IcDF3aWZOdlBoTmU2d3JiaGN6Mk9YRlhoYW5ocGxoaXRPbVFNdHZYenEKVTloMlRycXRoUzVkNGJCT0FWczhMbTBDUTdiUGR4M0ttd0t6VzNBVTRPQXgyRFpITWxwMGZBdTEwaFhpZDc4bwpPaWNNUTJSUFFDV2VyRi9ud3dMamlETlpBb0dBUTVnZ0ZVTGh5YjA4MHRid1pEZWNldzlLS0E5Rncrazh4bnMxClU4SmxNUk9hY2ErM0xNRkhrNkVIOXJQaDNCaFd5NFhUTHQ4UXpITGo2VDllWkhqWUo4N2FGeE1MQzZCTlFaRVQKL0tkTG8yL0dDZlI5WC9STkdMQkZOVTgrS0V1cnFkRGlwUUVLOWhJQWk2anQ4S1BESzAxNUU1L3ZQNzFMbm1JNwo4WGJxVUVFQ2dZQTVIczg2MWRrbml0WEJwWTdTK0dIb1N2Vk5NL1hxV2hFaGhVWGQzbTZjdWRQS09FZU9OU3hyCmZyNWtFWGs2TldDUnFIdjZycDBGRk5HSXY1dWZpalg5bk9kRkFZQ0Ric0FSVDN4Y3ZZcGl3SU0zdWNyM3ViMUgKdzNLdVYyYVdhWEp0Q0VNcVFCN2FpS1FLbHhnT1Zick1DYkd0anYzcFUwbUFUK3V0Y0F6dnZBPT0KLS0tLS1FTkQgUlNBIFBSSVZBVEUgS0VZLS0tLS0=
EDITOR_PUBLIC_KEY_FOR_EMBEDDING=LS0tLS1CRUdJTiBQVUJMSUMgS0VZLS0tLS0KTUlJQklqQU5CZ2txaGtpRzl3MEJBUUVGQUFPQ0FROEFNSUlCQ2dLQ0FRRUE0c3o2V1NyRVgyd1AvUTFJOGRSMQpOZzRPdmxDc2kxK2l5bER0NitRVkdoRUtrZzR1VXpCQ3VUUGZLT09QZlo0MThIMXkydk54UzNQOHdwUzdPa2R0Ck9XNXg4cDVIY21FTGFHeHBQVk8wYXFOWVZjYlZMSUl6S3ZqOXI5UUNpeGc0NHZrdm1mR2o1bVQ2SkpZV0pPTE0KT0lYSUxsektUMlFocElhbXhiR3N1ZlFRMzZ1dDVweG1DOTMrQWltQWJSejloMzB4T0NJWnRVeTVTVVZLbktKSwp4NS9jckpFRExJT2FuNUNzVkZHYnFaNTlCL0UvS1Q4aWt3VDgwNHpwaUVhMjJSLy96VkgyN2ZYK1J1SG9iWVhCCkNRTXBTTzhRd0VESWJTTlBKSUdPTFJDL1dlUTVVOCt1WTRUeDdSajVuOXdyazVrRTVpWkRXM08xc3dHQXdHTTEKdHdJREFRQUIKLS0tLS1FTkQgUFVCTElDIEtFWS0tLS0t

# === Additional configurations ===

# When the editor is deployed in docker we cannot access edu-sharing via
# `localhost`. This is a hack to overwrite the host in `postContentApiUrl` and
# `getContentApiUrl`. This should not be needed in a Kubernetes deployment.
EDUSHARING_NETWORK_HOST=repository.127.0.0.1.nip.io:8100
